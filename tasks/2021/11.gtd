2021-11

/* MEMO{{{
x Goの基礎とアルゴリズム的な課題解決。 -> 標準パッケージのコードリーディング  -> zenn scraps
間近に勉強したい事は、アサインされたタスクに対しての知識の補充。勤務先の課題の把握とそれに対しての解決策の準備。
業務知識ま割りの補強,調べる。block-chain ことはじめ。 -> 詳解 block-chain を読む。
ORMに頼りきりだったのでSQL 部分の復習 http://sqlbolt.com。
refs: [とりあえずド素人が読むべきブロックチェーン入門論文・書籍・サイト - Qiita](https://qiita.com/onokatio/items/7db58947b05c17d1f44e)
社内アウトプットの導線。 -> インフラ関連のzenn-scraps -> 4記事投稿した。
基本的なスケージュールの確認 9 - 10 タスクの確認、メール確認, 13 - 13.5 飯, 13.5 - 14 メール確認, 14 - 18 タスク。
IaC周りの理解の強化。特にterraform のスニペットを増やしたりAWSのサービスも細かく見る。特にコンテナ周り。
[GitHub - bitcoinbook/bitcoinbook: Mastering Bitcoin 2nd Edition - Programming the Open Blockchain](https://github.com/bitcoinbook/bitcoinbook)
[web3.js - Ethereum JavaScript API &mdash; web3.js 1.0.0 documentation](https://web3js.readthedocs.io/en/v1.5.2/index.html)
https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/what-is-managed-blockchain.html
経費申請項目: 交通費、NFTの教科書、詳解Bitcoin, LPIC_1.
[GitHub - IzumiSy/go-cleanarchitecture](https://github.com/IzumiSy/go-cleanarchitecture)
[APIを利用したPLTの取引について &#8211; Coincheck blog](https://coincheck.blog/12771)
amazon magic mouse 買う
C 言語での実装、メモリやGCを含むアルゴリズムやデータ構造への理解。
Rust の機能の把握, Webサーバー開発での応用とか見てみる。
get: iPad air, pen, cover, shouse, hair cut 10 man-yen
クレジットカード·簿記に関して学ぶ。
15 以降に予定を設定する。
会食: 後半 10h
マインドセット再 目標設定
o AMB init with terraform
o code reading https://github.com/crisadamo/gochain
o code reading https://github.com/izqui/blockchain
o set fargate scheduling. -> [AWS節約術 : 自動で任意の時間にFargateを起動・停止する｜psyashes｜note](https://note.com/psyashes/n/n06b6bdf10881)
o fargateのusecaseの整理.
o (1) code-build, code-deploy, code-pipeline と GitHub の連携 関連の調査
o terraform の運用方針を決める。
o ECS 構成 -> [ECS の構成と Terraform コード化する際の構造化について](https://jedipunkz.github.io/blog/2019/10/17/ecs/)
[Terraform で AWS Load Balancer Controller を宣言的にデプロイする](https://zenn.dev/yukin01/articles/6dd6542993ab166d51c2)
[TerratestによるTerraformコードの単体テスト](https://zenn.dev/aquamarinearia/articles/terratest_testing_terrafom_code)
o 読む [Bitcoinトランザクションをバイナリから理解していく](https://tech.fressets.com/1103/)
o eth, dapps tutorial <https://www.youtube.com/playlist?list=PLuCS8p0T7ozKYkr15ZjtjSNmVIwMVZebu>
o dynamodb のローカル環境の構築とデプロイまでのフロー。

*//*}}}*/

2021-11-11

o 分割統治マスター定理の証明
o 原産当時再帰マスター定理の証明
o マイナンバー月の住民票を取りに行く。
o 目的の明確化

2021-11-10

x kis9a/vim-snippets plugin の初期化
x マイナンバーを見つける
x 124 - 341 までに絞る。
x サイコロゲーム ROCE に繋げたい。
x 反復か再帰のどちらが適切か？
x ハノイの塔 x A(n + 1) = 2An + 1, An = 2^n -1
x 再帰に関しての定義整理
x subscription to be recreated. に関してのスレッドを読む。
~ google meet を録音して共通用語を抑える。
x tesnet 用の ALB ドメインの設定
x hustle or hassle
o 再帰の概念: 階乗の例/*{{{*/
n! に関して
n! = 1 // if n = 0
n! = n x (n-1) // if n >0
func fact(init n) {
if (n == 1) {
return 1
} else {
return n*
}
return n*fact
}
/*}}}*/
o 階乗の例の際のメモリの動き/*{{{*/
if n == 4
4!
4 * 3!
3 * 2!
2 * 1!
1
/*}}}*/
x why closed hyperway navigation issue?
x check comment about hyperway.

2021-11-09

x Cライブラリのインストール方法。
x 単純なポインター演算を初めて見る。
x [Google Chromeで条件にマッチした履歴を削除](https://qiita.com/kaityo256/items/dd306110580100159041)
x clang 実行環境の準備
x clang 始める。zenn.dev.
x [Docker for Macを使っていたらディスク容量を圧迫していたので](https://qiita.com/shinespark/items/526b70b5f0b1ac643ba0)
x read [今日からできるプログラムの高速化(C/C++)](https://zenn.dev/irugo/articles/4bd113195228c3)
x e の要件に関して理解する[2021-11-08
x ssm parameter の設定
x data 構造とアルゴリズム
x dns setting for stag domain.
x ssm praemter setting
x 環境構築 C
x format c: fd -ec | xargs -I {} bash -c "clang-format {} | tee {}"
x shell parameter の整理
x man hoo | col -b | nvim -
x init clang snippets
x find . -maxdepth 1 | grep -e Ch -e Ap | xargs -n 1 bash -c 'echo ${0: -2}'
x [はじめに｜net／httpでつくるHTTPルーター 自作入門](https://zenn.dev/bmf_san/books/3f41c5cd34ec3f/viewer/dce8ca)

2021-11-04
2021-11-05
2021-11-06
2021-11-07

x 1 password の導入/*{{{*/
  x research and examination.
  x application subscriptions -> Apoleストアでは月会費450円もしくは年会費3,900円
  x connect google account
  x chrome extensions.
/*}}}*/
x clean up task lists.
x https://github.com/higuruchi/sijimi
x github api usage https://github.com/mattn/gh-star/blob/main/main.go
x [GitHub Actions でも [skip ci] が使えるようになりました](https://zenn.dev/snowcait/articles/ef60401313a3fc)
x findy のアカウント削除。
x [Toreru](https://toreru.jp/)
x [80万円／月～の案件一覧](https://freelance.levtech.jp/project/sala-6/)
x [Blockchain学習メモ](https://zenn.dev/razokulover/scraps/b85e061d8c06fd)
x [GitHub - MasakiMisawa/cwl-transfer-slack-sample](https://github.com/MasakiMisawa/cwl-transfer-slack-sample)
x 初期化 pc1
x セットアップ pc1
x 初期化 pc2
x buy clang data strcture and algorithm.
x https://github.com/georgyo/ifconfig.io
x [CloudWatch Events Amazon SNS トピックで通知が送信されないときの対処法](https://dev.classmethod.jp/articles/tsnote-sns-topic-policy-encryption-cloudwatch-001/)
x Lambda cloudwatch [Lambdaをどう管理する？ - 秋の魔法使い](https://radiochemical.hatenablog.com/entry/2020/08/30/180000)
x t3.largeで環境構築やってみる。起動時間とコストの算出プログラム。
x やっぱり Lambda より chatbot の方がいいかもな。 -> [CloudWatchのアラートをSlackへ通知する](https://zenn.dev/3104/articles/6bb3603feb64a0)
x https://qiita.com/hayao_k/items/529539bbb07736ea0f41
x [Web3.0のインターネット基盤になっていくEthereum](https://nobumei.substack.com/p/web30ethereum)
x https://qiita.com/kooohei/items/e9f8692b9ebe90b6a9df
x project management -> PMBOOK
x datadog の個人での導入
x bigqury の個人での導入
x https://menslog.net/2021/02/02/kimetunoyaiba-back-settings/
x terraform modulelize
x https://maku77.github.io/vim/basic/search.html
x read cloudwatch alarm resources.
x initialize cloudwatch alarm test resource.
x [LambdaイベントソースのSNSからCloudWatch Alarm名を取得してみた](https://dev.classmethod.jp/articles/lambda-sns-cloudwatch-alarm/)
x aws cloudwatch set-alarm-state --alarm-name $ --state-value $ --state-reason "test"
x cloudwatch-alerm -> lambda の実行テストを実践。
x fzf に関しての調べ in slack vim-jp.
x [GitHub - anyakichi/lambda-rust-api-sample](https://github.com/anyakichi/lambda-rust-api-sample)
x how to create vim-snippets plugin.
x vim-zenn-snippets <https://github.com/kis9a/vim-zenn>
x script for development instance https://github.com/motojouya/ec2-develop/blob/master/init.sh
x serverless GitHub API の hook の使用。
x [Golang でコマンドライン Fuzzy Finder 「gof」作った。 - Qiita](https://qiita.com/mattn/items/edea1be5a6d84663ab8b) の実装
x 個人のproject management とディレクトリ構成。
x 構成図を書いて一度整理する。
x スタートアップ 経由でのマネタイズ関連。
x 株式会社 unkonow のリポジトリの作成。
x 定量か指標の組み込み。
x cd ~, pushd ~ > /dev/null
x ec2 instance の開発環境での使用事例.
x commented for youtube video about ipad blink shell.
x read [TerraformでAWSのスポットインスタンスを作成する - Qiita](https://qiita.com/m-shimao/items/0832d67b6abdc22ba2f0)
x read [AWS Spot Instance Guide: 7 Things You Should Know - ParkMyCloud](https://www.parkmycloud.com/blog/aws-spot-instance/)

2021-11-03

~ zenn-markdown snippets
x init me/cv_22_01.md
~ init me/cv_22_08.md
x (1) lambda のローカル実行方法の調べ。
x [GolangでSlack Interactive Messageを使ったBotを書く](https://engineering.mercari.com/blog/entry/2017-05-23-095500/)
x 開発用インスタンスの作成 - nvim install.
x how to manage ami.
x [EC2をリモート開発環境にする時のTips](https://zenn.dev/suzuk1satosh1/articles/2b8e4fa4259e51)
x 目的を決める。-> 自己分析期間とメトリクス、監視方法に関して考える。

2021-11-02

x "github.com/slack-go/slack" を使用してみる。[slack-go Slack にメッセージを投稿](https://zenn.dev/kou_pg_0131/articles/go-slack-go-usage)
x password check [How Secure Is My Password?](https://howsecureismypassword.net/)
x kms encrypt / new bastion / s3 bucket rename ...
x migrate terraform resource another account.
x multi account operation.
x destroy lambda-upload resource
x あの日たてたリソースの名前も用途も管理者も金額も後色々、僕たちはまだ知らない
x archive  post about frontend learning cost reduce.
x cloudtrailのIaC, clean up iam role, post.
~ aws [AWS CLF、SAA、SOA、DVA4冠までの道のり](https://zenn.dev/mn87/articles/0b8b6d8bf49249) -> 体系化は後でいい
~ terraform から cloudformation resource で chatbot を管理する。 -> 学習コスト。
x Removed the title of blockchain engineer. -> customer-tailored service orientation engineer
x 請求アラートのIaC -> [CloudWatchで請求アラームを作成する](https://zenn.dev/mn87/articles/ec5a57228c491c) -> don't use mail
~ 請求書アラートのIaC -> [請求アラームをAWS ChatbotでSlackに通知してみた](https://zenn.dev/mn87/articles/17901f9a88b706) -> no support tf aws chatbot
x slack のトークン取得方法。Webhook/ slack-bot 関連のリサーチ
x lambda triger の設定 / example s3 put object.
x make private 
x release validation for upload filetype at javascript.
~ manage cost tags for billing. -> sep account.
x memo coding-interview algorithm
x clean up relation for company. buyout, subsidiary.
x 月次勤怠締め申請は必要か？
x cloudtrail log の調査
x archive task files.
x read [リモートワークを支える 社内セキュリティ基盤の構築と運用](https://speakerdeck.com/mizutani/secueiry-for-wfh?slide=29)
x read [AWS S3を中心としたセキュリティログ基盤の紹介をしました](https://techlife.cookpad.com/entry/aws-tma-2019)
~ 24365
~ mv dotfiles ~/kis9a/dotfiles
x fix aws-services script.
~ remove aws-services script action.

2021-11-01

x transfer aws cost at october.
x try to fix invalid content-type when upload image.
x read [クレデンシャルの適切な扱い方 ー AWS SDK for Goの場合 | DevelopersIO](https://dev.classmethod.jp/articles/using-credential-at-aws-sdk-for-go/)
x fix InvalidAccessKeyId error. -> documented.
x schdule not woking fix re apply and setup kms.
x https://github.com/kis9a/aws-cost-line-notify のアーキティクチャ変更に関しての記事の更新。
x try lambda-upload allow all resource remove under /*{{{*/
# resources = [
#   "${aws_s3_bucket.this.arn}"
# ]
#}}}
x kms line token/*{{{*/
```
ecoh $AWS_COST_LINE_NOTIFY_TOKEN > secret.txt
## $keyId known after terraform apply.
id=$(aws kms generate-data-key --key-id $keyId --key-spec AES_256 --output json | jq .KeyId)
aws kms encrypt --key-id $id --plaintext fileb://secret.txt --query CiphertextBlob --output text > lambda-upload.yaml.encrypted
```/*}}}*/
x add environment block for lambda function/*{{{*/
environment {
  variables = {
/*}}}*/
/* fix lambda iam role{{{
downloader := s3manager.NewDownloader(sess)
n, err := downloader.Download(f, &s3.GetObjectInput{
  Bucket: aws.String(bucketName),
  Key:    aws.String(objectKey),
})
/*}}}*/
