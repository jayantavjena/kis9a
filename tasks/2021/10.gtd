2021-10

/*
業務知識ま割りの補強,調べる。block-chain ことはじめ。
Goの基礎とアルゴリズム的な課題解決。社内アウトプットの導線。
C 言語での実装、メモリやGCを含むアルゴリズムやデータ構造への理解。
Rust の機能の把握, Webサーバー開発での応用とか見てみる。
間近に勉強したい事は、アサインされたタスクに対しての知識の補充。勤務先の課題の把握とそれに対しての解決策の準備。
ORMに頼りきりだったのでSQL 部分の復習 http://sqlbolt.com。
IaC周りの理解の強化。特にterraform のスニペットを増やしたりAWSのサービスも細かく見る。特にコンテナ周り。
基本的なスケージュールの確認 9 - 10 タスクの確認、メール確認, 13 - 13.5 飯, 13.5 - 14 メール確認, 14 - 18 タスク。
leetcode-vim, leetcode-vscode 等, エディタのインテグレーションを学習プロセスに含める。
refs: [とりあえずド素人が読むべきブロックチェーン入門論文・書籍・サイト - Qiita](https://qiita.com/onokatio/items/7db58947b05c17d1f44e)
[GitHub - bitcoinbook/bitcoinbook: Mastering Bitcoin 2nd Edition - Programming the Open Blockchain](https://github.com/bitcoinbook/bitcoinbook)
[web3.js - Ethereum JavaScript API &mdash; web3.js 1.0.0 documentation](https://web3js.readthedocs.io/en/v1.5.2/index.html)
https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/what-is-managed-blockchain.html

ELM もキャッチアップしとくか？
https://github.com/phenax/esbuild-plugin-elm
https://qiita.com/niso1985/items/c4084d996b89582aaf1c
https://qiita.com/IzumiSy
*/


// [GitHub - IzumiSy/go-cleanarchitecture](https://github.com/IzumiSy/go-cleanarchitecture)
o ミドルウェアのプロビジョニングツールの再度リサーチ。
o 見る <[【本編 32:17 より】Infra Study Meetup #1「Infrastructure as Codeのこれまでとこれから」 - YouTube](https://www.youtube.com/watch?v=_bLzgd_UlbU)>
o https://github.com/awslabs/aws-lambda-go-api-proxy のドキュメントを読み理解する。
o lambda で gin の proxy が動作しているかどうかの確認。
o Ansible 周りの記事を漁ります。https://zenn.dev/topics/ansible
o 進数変換スクリプト Golang
o 1 read bitcoin transaction section.
o 読む [Bitcoinトランザクションをバイナリから理解していく](https://tech.fressets.com/1103/)
o 1 read proof of work section.
o base-number に関して、Golang の 標準パッケージ、数学。
o freee 経費申請画面を見つける。 -> 権限がない、調整中？月末に確認。

2021-10-11

o 一つのキーペアで各インスタンスにログインできる。アクセステスト用のインスタンスの設定。
o SG VPC ローカルIPアドレスによるインスタンスのアクセス制限。
o /etc/hosts/ の名前解決して、接続のインターフェースをわかりやすく。
o ssh 周りのコンフィグファイルの調査。
o セキュリティーアップデートのHookの導入を考える。
o AWS Backup EC2 の調査。
o AMI の開発方法を調べる。
o AMIとEC2 template の更新用のパッチ。
o EC2の権限を特定のインスタンスに絞りたい。

2021-10-10

x 詳細Bitcoin の購入
x 詳細Bitcoin の index を整理する
x 1 read bitcoin-cli section
~ 読む ssh-fzf を作ってみる/*{{{*/
```
function ssh-peco() {
  local user="ec2-user"
  local host=$(aws ec2 describe-instances \
                 --region ap-northeast-1 \
                 --output json \
                 --filters "Name=instance-state-code,Values=16" | \
               jq -r '.Reservations[].Instances[] | [.Tags[] | select(.Key == "Name").Value][] + "\t" + .InstanceType + "\t" + .PrivateIpAddress + "\t" + .State.Name' |\
               awk '{printf "%-30s %-15s %-15s %-10s\n",$1,$2,$3,$4}' |\
               sort |\
               peco | awk '{print $3}')
  ssh -i ~/.ssh/key/auth-dev.pem \
      -o StrictHostKeyChecking=no \
      -o UserKnownHostsFile=/dev/null \
      "$user@$host"
}
```
/*}}}*/
x Chef と Ansible を比較する。
x 開発、アウトプット支援用のインスタンス -> dev1, domain: dev1.kis9b.com.
x 基本的な構成から, EC2インスタンスのデプロイ with terraform.
x 基本的な構成から
x (1) freee のプロフィールの情報登録。 必要なもの振込先口座, 社保対応,基礎年金,現住所,住民票住所,雇用保険番号,484806770
x wa1 のインスタンスをオートスケールさせる。スケジュール停止、起動。
x ec2 スケジュール停止、起動に関しての投稿 -> [diodonfrost/terraform-aws-lambda-scheduler-stop-start を使って、EC2インスタンスの起動、停止スケジュールを管理。](https://zenn.dev/kis9a/scraps/988fbe1b495821)
x dev1 インスタンスの要件を整理する -> <https://gist.github.com/kis9a/07a95ff4291fd06e9492987c741af251>
~ update-ami.bash -> get instance-template id and create image -> output ami-id.json
~ update-template.bash -> read ami-id.json -> update template ami field.

2021-10-09

x xssm login のIaC 化
x alb の https 化の IaC。
~ cv を description で共有。
~ terraform-dev-instance 開発用のインスタンスのIAC. -> auto-scaling, AMI. -> 開発用インスタンスは、運用見合わせ
x 社内のtimes に通知する。
x wa1 のインスタンスをssm ログインできるようにする。
x alb のhttps化 zenn に ポストする。-> [EC2 + ALB + Route53 ... 構成を terraform で適当に管理してみる。](https://zenn.dev/kis9a/scraps/ffbe3f8ebfc43f)
x ssm login に関して zenn にポストする -> [SSM で EC2 インスタンスにログインできるようにする。](https://zenn.dev/kis9a/scraps/72f205eed406ce)
x 動作確認 & 投稿 [diodonfrost/terraform-aws-lambda-scheduler-stop-start を使って、EC2インスタンスの起動、停止スケジュールを管理。](https://zenn.dev/kis9a/scraps/988fbe1b495821)
/* provisioner "remote-exec" { *//*{{{*/
/*   inline = [ */
/*     "sudo su -", */
/*     "apt update", */
/*     "apt install lighttpd -y", */
/*     "service lighttpd start" */
/*   ] */

/*   connection { */
/*     type        = "ssh" */
/*     host        = self.public_ip */
/*     user        = "ubuntu" */
/*     private_key = file("./wa1.pem") */
/*   } */
/* } */
/*}}}*/
x [CloudFront+ALB+S3でリダイレクト+静的サイトホスティングする環境をTerraformで作ってみた - Qiita](https://qiita.com/t-okibayashi/items/49b3968e5b686af663ba)

2021-10-08

x ec2 auto-scaling の設定。
x AMIアタッチ用の権限調査。 -> PassRole add to IAM Policy.
x テンプレートに AMI ロールを設定。
x auto-scaling の動作確認。test-in, test-out schedule.
x 不要なインスタンスの終了, アクセステスト用のinstance の作成。
x AMIの開発用のインスタンス。
~ AMIイメージの更新フロー, 保存される状態を動作を確認する。 -> shell scirpt 化。
x LB HTTPS化　検証用ドメインの証明書の発行。
x LB HTTPS 化 -> 関連性の整理。

2021-10-07

x clean up tasks yesterday.
x data extract script and task.
x setup aws SSM login.
x ssm 接続用ローカルプラグイン等の導入。
x global ip を調べて、アクセス制限。 curl ifconfig.io
x インスタンスにsshエージェント等の設定。ロール割り当て。
~ terraform-inventory を試す。
x 名刺の肩書きをどのようにするか。 -> ...事業部、エンジニアポジション
x provider のprofile 有効範囲を調べる。-> 他のアカウントにIaCしてしまった。
x ssm のコード化。

/*
TerraformのprovisionerにはAnsibleがないが terraform-inventory が 
.tfstateファイルからdynamic inventoryを生成しAnsibleでのterraformリソースの構成管理を可能にしてくれるようなので試してみた。 

https://7me.nobiki.com/2020/04/02/sar-command-memo/
*/

2021-10-06

x ALB の導入。
~ monit と system.d に関して見る。
x Watch List [くろかわこうへいのAWS講座VPC編](https://www.youtube.com/watch?v=mHi2yFWLz9M) -> /memos/vpc.md
x scp local and docker remote.
x Go I/O の抽象性 見る -> [Goから学ぶI/O](https://zenn.dev/hsaki/books/golang-io-package)
x fs pacakge のコードリーディング
x fs pushed tag:v0.1.0
x ALB とドメインの紐付け。
~ scheme fs extends for embed and media.
~ testnet の中身をみる。プロセスとかサービスとかログとかみる。
~ vs command embed statics and build to binary and distribute.

2021-10-05

~ 個人ルートアカウント add MFA for the root user to improve security for this account.
x youtube-dlで情報集め -> 通勤時ぐいおん用
x watch [エンジニアとおカネの話【M3 Tech Talk 第156回】 - YouTube](https://t.co/ICpYhcU919?amp=1)
x terraform VPC 作成, alb の設定。
x terraform init for
x Satoshi Nakamoto https://bitcoin.org/bitcoin.pdf -> kindleに送る。
x 個人AWSアカウントの設定,認証。
x blockchain の用語を整理してメモにまとめる。
~ kindle に送るを自動化、github リポジトリと連携。
x freee のプロフィール編集。
/* o 冗長な構成でVPCからAWSコンソールからマニュアルでアプリケーションを組んでみる。 */
//  https://techblog.blockchain.bitflyer.com/entry/2020/04/22/190025
// ffmpeg -i test.mp4 -vframes 1 -vf "scale=360:-1" small_thumnail.png

2021-10-04

~ 単純なテキストファイルのフォーマッターの追加。 -> ない
x elm examples の収集。
~ 読む 20:00 ~ https://tech.fressets.com/2289/ -> わからん
x https://github.com/budougumi0617/leetgode を試す。 -> generate 問題文の整形が必要。使わない。
x vim-gtd の syntax-hilight の match pattern の fix と追加。
x sysstat について調べる。
x 社 GitHub リポジトリの概要の把握といくつかのプロジェクトのローカル環境の構築。
x テストインスタンスにログインしていろいろ見る。
x scp command について調べる -> local での検証。TODO: how to scp client.
x プラットフォームと情報発信の関連性。
x rabbit-mqって何？ SQS -> [ Documentation: Table of Contents](https://www.rabbitmq.com/documentation.html)
// [いいねが欲しけりゃコードを書くな - Qiita](https://qiita.com/fmfm_mdk/items/61d86fef2ed26656369d)
// Zenn Books と知名度、わかりやすい記事を書くという幅の狭さ。好きなトピックに振れるか？
// プラットフォームならではの圧力。拡散リスク。 -> 自分のブログ等 -> の集客の流れがいいかも。
// articlesを自分のサイトに載せる scrap-box 的な UI インターフェースも。

~ research [GitHub - skygragon/leetcode-cli: A cli tool to enjoy leetcode!](https://github.com/skygragon/leetcode-cli)
~ 社 インフラ ~ バックエンドの構成の理解 -> 情報が少ないので、後で。
x grpc のロードバランシングについてみる - [gRPCアプリをAWS ELBで負荷分散してみた | DevelopersIO](https://dev.classmethod.jp/articles/balancing-grpc-app-by-elb/)
x Load balancer 概要復習 -> https://docs.aws.amazon.com/ja_jp/elasticloadbalancing/latest/application/introduction.html
x OSI model のメモ, tcp/ip model.
x leave home AM: 7:30

// service --status-all
// タスクターゲットは，ある特定のファイルを作るためではなく，作業を行うコマンドとして利用したい場合に用いられます． 
// .PHONYは，タスクターゲットを宣言するためのターゲットです

2021-10-03

~ (1) leetcode-vim research. -> ~https://github.com/skygragon/leetcode-cli~
x (1) イーサリアム、ビットコインの違い、エクスプローラーとは。
x (1) ブロックチェーンのトランザクションについて詳しく。
x (1) freee login and 勤怠申請。
x (1) hp mail-check and reply.
x GitHub follow topic の整理
x pc change to light mode.
x syntax hilight の色変更、追加.
x 交通情報の整理 -> screen shot.
x block-chain系の書籍の整理. -> kindleで読めるやつがいい, Mastering bitcoin.
x leetcode の問題の整理. -> 問題のリスト化. -> GitHub gist. ref solution: https://github.com/austingebauer/go-leetcode
x minecraft build basic homes and gauge.


2021-10-02

x money schemed. 20 -> ipad 8, next_funds 8. -> 見える化
x cleanup subscriptions.
x changed main pc ops.
x research for block-chain roadmap. -> https://github.com/OffcierCia/DeFi-Developer-Road-Map
x バリデーションの重複処理に関して, frontend, backend. -> https://qiita.com/isaaac/items/4ca28057a45dddb14a64
x repository visibility. -> 一年以上前のプロトタイププライベートやフォークはリサイクル or 消す運用。
x minecreaft command listed.
x 情報発信に関しての整理. -> Go, JavaScript, IaC, block-chain で続行
x 情報発信の種類、技術記事の種類について調べる。 -> やってみた、できた、tips, なぜか？、翻訳、推奨。

2021-10-01

x tasks for eip
x first time to go
